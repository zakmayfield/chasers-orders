generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  username   String? @unique
  isApproved Boolean @default(false)

  company Company?
  cart    CartItem[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Company {
  id   String @id @default(cuid())
  name String

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])
}

model CartItem {
  id       String @id @default(cuid())
  quantity Int

  productId String
  product   Product @relation(fields: [productId], references: [id])
  userId    String
  user      User    @relation(fields: [userId], references: [id])
}

model Product {
  id       String @id @default(cuid())
  name     String // Product name, e.g., "Banana-Mango-Pineapple"
  category String // Product category, e.g., "BLENDS"

  unit1  String // e.g., "1L"
  price1 Float // e.g., 8.25
  code1  String // e.g., "WHS-Blends:BAN-MGO-PINE-1"

  unit2  String? // Nullable since it's optional
  price2 Float? // Nullable since it's optional
  code2  String? // Nullable since it's optional

  unit3  String? // Nullable since it's optional
  price3 Float? // Nullable since it's optional
  code3  String? // Nullable since it's optional

  unit4  String? // Nullable since it's optional
  price4 Float? // Nullable since it's optional
  code4  String? // Nullable since it's optional

  unit5  String? // Nullable since it's optional
  price5 Float? // Nullable since it's optional
  code5  String? // Nullable since it's optional

  cartItems CartItem[]
}
